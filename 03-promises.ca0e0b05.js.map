{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAI9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAiBH,SAASC,cAAc,oBACxCG,EAAcJ,SAASC,cAAc,sBACrCI,EAAWL,SAASM,qBAAqB,UAmD/C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CArDbV,EAAKkB,MAAMC,QALQ,OAMnBnB,EAAKkB,MAAME,cAJK,SAKhBpB,EAAKkB,MAAMG,WANQ,aAOnBlB,EAAWe,MAAMC,QARE,OASnBhB,EAAWe,MAAME,cAPD,SAQhBjB,EAAWe,MAAMG,WATE,aAUnBlB,EAAWe,MAAMI,aARM,OASvBnB,EAAWe,MAAMK,MAbE,QAcnBnB,EAAec,MAAMC,QAbF,OAcnBf,EAAec,MAAME,cAZL,SAahBhB,EAAec,MAAMG,WAdF,aAenBjB,EAAec,MAAMI,aAbE,OAcvBlB,EAAec,MAAMK,MAlBF,QAmBnBlB,EAAYa,MAAMC,QAlBC,OAmBnBd,EAAYa,MAAME,cAjBF,SAkBhBf,EAAYa,MAAMG,WAnBC,aAoBnBhB,EAAYa,MAAMI,aAlBK,OAmBvBjB,EAAYa,MAAMK,MAvBC,QAwBnBjB,EAAS,GAAGY,MAAMM,SAAW,OAC7BlB,EAAS,GAAGY,MAAMO,WAAa,MAC/BnB,EAAS,GAAGY,MAAMK,MA1BC,QA4BnBvB,EAAK0B,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,IAAIC,EAAaC,OAAO3B,EAAW4B,OAC/BC,EAAOF,OAAO1B,EAAe2B,OAC7BE,EAASH,OAAOzB,EAAY0B,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChC1B,EAAc0B,EAAGL,GACdM,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAAtC,GAASuC,OAAOC,QACd,uBAAqB7B,QAAiBC,MAAU,IAGnD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAAtC,GAASuC,OAAOG,QACd,sBAAoB/B,QAAeC,MAAU,IAGnDmB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n// const {\n//   elements: { inputDelay, inputDelayStep, inputAmount },\n// } = form;\nconst inputDelay = document.querySelector('input[name=delay]');\nconst inputDelayStep = document.querySelector('input[name=step]');\nconst inputAmount = document.querySelector('input[name=amount]');\nconst btnStart = document.getElementsByTagName('button');\nconst fieldWidth = '150px';\nconst displayBox = 'flex';\nconst alignStyle = 'flex-start';\nconst flexDir = 'column';\nconst marginInterval = '10px';\n\nform.style.display = displayBox;\nform.style.flexDirection = flexDir;\nform.style.alignItems = alignStyle;\ninputDelay.style.display = displayBox;\ninputDelay.style.flexDirection = flexDir;\ninputDelay.style.alignItems = alignStyle;\ninputDelay.style.marginBottom = marginInterval;\ninputDelay.style.width = fieldWidth;\ninputDelayStep.style.display = displayBox;\ninputDelayStep.style.flexDirection = flexDir;\ninputDelayStep.style.alignItems = alignStyle;\ninputDelayStep.style.marginBottom = marginInterval;\ninputDelayStep.style.width = fieldWidth;\ninputAmount.style.display = displayBox;\ninputAmount.style.flexDirection = flexDir;\ninputAmount.style.alignItems = alignStyle;\ninputAmount.style.marginBottom = marginInterval;\ninputAmount.style.width = fieldWidth;\nbtnStart[0].style.fontSize = '16px';\nbtnStart[0].style.fontWeight = '600';\nbtnStart[0].style.width = fieldWidth;\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let firstDelay = Number(inputDelay.value);\n  let step = Number(inputDelayStep.value);\n  let amount = Number(inputAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    firstDelay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputDelayStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$btnStart","getElementsByTagName","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","style","display","flexDirection","alignItems","marginBottom","width","fontSize","fontWeight","addEventListener","event","preventDefault","firstDelay","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.ca0e0b05.js.map"}